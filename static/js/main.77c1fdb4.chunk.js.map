{"version":3,"sources":["ExpenseApp/UI/Card.js","ExpenseApp/Expenses/ExpenseDate.js","ExpenseApp/Expenses/ExpenseItem.js","ExpenseApp/Expenses/ExpensesList.js","ExpenseApp/Expenses/ExpensesFilter.js","ExpenseApp/Chart/ChartBar.js","ExpenseApp/Chart/Chart.js","ExpenseApp/Expenses/ExpensesChart.js","ExpenseApp/Expenses/Expenses.js","ExpenseApp/NewExpense/ExpenseForm.js","ExpenseApp/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","size","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","inputTitle","setInputTitle","inputAmount","setInputAmount","inputDate","setInputDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","inputExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77c1fdb4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./expensedate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./expenseitem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">\r\n          <FaRupeeSign size={15} />\r\n          {props.amount}\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./expenseslist.css\";\r\n\r\nfunction ExpensesList(props) {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          ></ExpenseItem>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./expensesfilter.css\";\r\n\r\nfunction ExpensesFilter(props) {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./chartbar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./chart.css\";\r\n\r\nfunction Chart(props) {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport \"./expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./expenseform.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n\r\n  const titleChange = (event) => {\r\n    setInputTitle(event.target.value);\r\n  };\r\n\r\n  const amountChange = (event) => {\r\n    setInputAmount(event.target.value);\r\n  };\r\n\r\n  const dateChange = (event) => {\r\n    setInputDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: inputTitle,\r\n      amount: +inputAmount,\r\n      date: new Date(inputDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setInputTitle(\"\");\r\n    setInputAmount(\"\");\r\n    setInputDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={inputTitle} onChange={titleChange} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={inputAmount}\r\n            onChange={amountChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={inputDate}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./newexpense.css\";\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDateHandler = (inputExpenseData) => {\r\n    const expenseData = {\r\n      ...inputExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDateHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import \"./App.css\";\n\nimport { useState } from \"react\";\nimport Expenses from \"./ExpenseApp/Expenses/Expenses\";\nimport NewExpense from \"./ExpenseApp/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Mobile\",\n    amount: 10000,\n    date: new Date(2020, 1, 14),\n  },\n  { id: \"e2\", title: \"Grocery\", amount: 799, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 2100,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"Chair\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e4\",\n    title: \"Earphone\",\n    amount: 1500,\n    date: new Date(2021, 9, 28),\n  },\n  {\n    id: \"e5\",\n    title: \"New TV\",\n    amount: 35000,\n    date: new Date(2019, 7, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main\">\n        <h1 className=\"top-head\">EXPENSE TRACKER</h1>\n        <NewExpense onAddExpense={addExpenseHandler} />\n        <Expenses items={expenses} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}